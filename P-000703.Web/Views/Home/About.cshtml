@{
    ViewBag.Title = "About";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<p>1 Datos generales<br />- Prueba de Seguros P-000703<br />- Fecha recepci&oacute;n: 20 de agosto de 2019 a las 15:02.<br />- Autor: Ing. Jos&eacute; Alberto Leiva Obando, MBD, MBA</p>
<p>2 Iniciar</p>
<p>- Crear la base de datos.</p>
<p>- Crear las estructuras (tablas y procedimientos) y cargar datos base.</p>
<p style="padding-left: 30px;">- 01_Esquema.sql: Tablas y procedimientos.<br />- 02_Datos.sql: Carga de cat&aacute;logos.<br />- 03_Seguridad.sql: Creaci&oacute;n de tablas y carga de datos para autenticaci&oacute;n y autorizaci&oacute;n</p>
<p>- Ejecutar la soluci&oacute;n.</p>
<p><br />3 Listado de control<br />- Mantenimientos incluidos:<br />o P&oacute;lizas.<br />o P&oacute;lizas por cliente.<br />- Para cumplir con la regla de negocio del porcentaje de cobertura contra el riesgo, se parametriza, a nivel del cat&aacute;logo de riesgos, el m&aacute;ximo de cobertura soportado y en el mantenimiento se realiza la validaci&oacute;n, de forma que se tiene un punto de acceso &uacute;nico y controlado. La misma validaci&oacute;n puede agregarse en otras capas para evitar el viaje hasta BD, no obstante se recomienda volver a validar en BD para evitar omisiones de controles..<br />- Implementado con ASP.NET MVC. <br />- Se utiliza AngularJS para interfaz e invocaci&oacute;n de servicios, as&iacute; como Bootstrap para responsive. <br />- Se utiliza Bootstrap para que el sitio sea responsive.<br />- Los servicios para interacci&oacute;n con los componentes de datos se exponen por medio de ASP.NET Web API <br />- La interacci&oacute;n con la base de datos se realiza por medio de Entity Framework, con el enfoque Database First. <br />- Entity Framework implementa el Patr&oacute;n Repositorio.<br />- El sitio tiene la opci&oacute;n de logueo por medio de usuario y contrase&ntilde;a para autenticar los usuarios.<br />- Para la autorizaci&oacute;n, se crearon roles y se asignaron a algunas de las vistas para que solo los usuarios con el rol correspondiente puedan ingresar<br />- Para la inyecci&oacute;n de dependencias, se utilizan como par&aacute;metros entidades que se cargan desde la capa superior y se env&iacute;an hasta la de datos para el procesamiento correspondiente.<br />- Se crea un proyecto de pruebas para verificar la regla de negocio acerca de la cobertura y el riesgo. Para cada riesgo se defini&oacute; en base de datos el m&aacute;ximo de cobertura que permite. En caso de que el mismo sea sobrepasado, se retorna desde base de datos un c&oacute;digo de advertencia (98) con el mensaje correspondiente.</p>
